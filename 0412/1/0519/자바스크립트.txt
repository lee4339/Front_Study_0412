
  html - 웹문서 구조를 선언하는 언어
  CSS  - 웹문서의 디자인적인 부분을 선언하는 언어

  동적인 부분
  자바스크립트 -> 플래쉬 -> 제이쿼리 -> 자바스크립트
  기본문법 + UI인터페이스 

  node.js -> 가상서버 자바스크립트 실행하는 환경
   
  -------------------------------------------------- SPA 
  앵귤러1/2

  리액트     라이브러리              -> 자바스크립트 O
  뷰제이에서 라이브러리 + 프레임워크 -> 자바스크립트 X






  변수(Variable)
  변수란 데이터를 저장할 수 있는 메모리 공간을 의미합니다. 
  값이 변경될 수 있으며 자바스크립트에서는 let 키워드를 사용하여 
  변수를 선언하고 선언되지 않은 변수를 사용하거나 접근하려고 하면 
  오류가 발생합니다.

  let 변수명;     // 변수를 선언
  변수명 = 값;    // 변수를 초기화

  let num;
  num = 10; 

  num = num + 100;  
  num = 110;

  상수(constant)
  한번 선언된 상수는 다시 재정의 할 수 없으며, 값도 재할당 할 수 없습니다.

  const 상수명;
  상수명 = 값 (X)
 
  const num = 10;


  * var를 사용하지 않는 이유
  1. 같은 이름의 변수를 선언할 수 있음
  2. 지역변수와 전역변수의 구별이 없음

  [변수명을 지정하는 규칙]
  자바스크립트 함수,,자바스크립트 명령어 사용금지
  공백사용금지
  변수시작만 숫자 사용금지  kim75(O),  75kim(X) 
  특수문자는 _, $만 사용가능


[불리언형(boolean)]
 참(true) 또는 거짓(false)으로 표현되는 값입니다.

  const b1 = true;  //값이 있으면 true
  const b2 = false; //0, null, undefind 

[undefined, null 형]
undefined: 타입이 정해지지 않은 것을 의미 
          -> 변수 선언후 값이 정해지지 않은 경우
null: 값이 정해지지 않은 것을 의미 
          -> null로 변수를 초기화 한 경우 -> object 타입           

[객체형(object)]
여러 속성을 하나의 변수에 저장할 수 있도록 해주는 데이터 타입입니다. 
-> key / value pair 구조

let student = {"name":"김사과", "age":20};
               --------------   --------
                key    value   key  value

//#선택자{속성:속성값,속성:속성값}

[심볼형(Symbol)]
유일하고 변경 불가능한 기본값을 만듭니다. 
객체 속성의 key값으로도 사용할 수 있습니다.

const sym1 = Symbol("apple");
const sym2 = Symbol("apple");



[자바스크립트의 타입 변환]
자바스크립트의 변수는 타입이 고정되어 있지 않으며, 
같은 변수에 다른 타입의 값을 대입할 수 있습니다.

1. 암시적 타입 변환
타입의 값을 기대하는 곳에 다른 타입의 값이 오면 자동으로 
타입을 변환해서 사용합니다.

* NaN(Not a Number)
정의되지 않은 값이나 표현할 수 없는 값을 뜻합니다.
예를들어 0을 0으로 나누거나, 숫자로 변환할 수 없는 연산을 시도한 경우 
반환합니다.

2. 명시적 타입 변환
자바스크립트는 자동으로 타입 변환을 사용하지만 종종 명시적으로 
타입을 변환할 필요가 있습니다. 

Number() : 문자를 숫자로 변환
Number("10"+"5") (x)
String() : 숫자나 불린등을 문자형으로 변환
Boolean() : 문자나 숫자등을 불린형으로 변환
Object() : 모든 자료형을 객체형으로 변환
parseInt() : 문자형을 int형으로 변환
parseFloat() : 문자형을 float형으로 변환



자바스크립트의 대화상자
alert() 또는 window.alert() : 사용자에게 메세지를 보여주고, 
확인을 기다립니다.

confirm() 또는 window.confirm() : 사용자에게 메세지를 보여주고, 
확인이나 취소를 누르면 그 결과를 불리언값으로 리턴합니다.

prompt() 또는 window.prompt() : 사용자에게 메세지를 보여주고, 
사용자가 입력한 문자열을 리턴합니다.